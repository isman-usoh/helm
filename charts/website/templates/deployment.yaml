apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "website.fullname" . }}
  labels:
    {{- include "website.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "website.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- if or (.Values.vault.enabled) (.Values.podAnnotations) }}
      annotations:
        {{- if .Values.vault.enabled }}
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: {{ .Values.vault.role }}
        vault.hashicorp.com/agent-inject-secret-dotenv: {{ .Values.vault.secret_path }}
        vault.hashicorp.com/agent-inject-template-dotenv: |
          {{ "{{- with secret \"" }}{{ .Values.vault.secret_path }}{{ "\" -}}" }}
          {{ "{{- range $${q}k, $${q}v := .Data.data -}}" }}
          {{ "{{ $${q}k }}={{ $${q}v }}" }}
          {{ "{{ end -}}" }}
          {{ "{{- end -}}" }} 
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end -}}
      {{- end }}
      labels:
        {{- include "website.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "website.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- with .Values.envs }}
          env:
            {{- toYaml . | nindent 12 }}
          {{ end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          {{- if .Values.livenessProbe }}
          livenessProbe:
            httpGet:
                path: {{ .Values.livenessProbe.httpGet.path }}
                {{- if .Values.livenessProbe.httpGet.httpHeaders }}
                httpHeaders:
{{ toYaml .Values.livenessProbe.httpGet.httpHeaders | indent 16 }}
                {{- end }}
                port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            httpGet:
                path: {{ .Values.readinessProbe.httpGet.path }}
                {{- if .Values.readinessProbe.httpGet.httpHeaders }}
                httpHeaders:
{{ toYaml .Values.readinessProbe.httpGet.httpHeaders | indent 16 }}
                {{- end }}
                port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
